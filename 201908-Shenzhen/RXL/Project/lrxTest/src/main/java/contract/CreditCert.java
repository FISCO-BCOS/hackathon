package contract;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.fisco.bcos.channel.client.TransactionSucCallback;
import org.fisco.bcos.web3j.abi.EventEncoder;
import org.fisco.bcos.web3j.abi.TypeReference;
import org.fisco.bcos.web3j.abi.datatypes.Event;
import org.fisco.bcos.web3j.abi.datatypes.Function;
import org.fisco.bcos.web3j.abi.datatypes.Type;
import org.fisco.bcos.web3j.abi.datatypes.Utf8String;
import org.fisco.bcos.web3j.abi.datatypes.generated.Uint32;
import org.fisco.bcos.web3j.abi.datatypes.generated.Uint64;
import org.fisco.bcos.web3j.crypto.Credentials;
import org.fisco.bcos.web3j.protocol.Web3j;
import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;
import org.fisco.bcos.web3j.protocol.core.RemoteCall;
import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;
import org.fisco.bcos.web3j.protocol.core.methods.response.Log;
import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.fisco.bcos.web3j.tuples.generated.Tuple2;
import org.fisco.bcos.web3j.tuples.generated.Tuple3;
import org.fisco.bcos.web3j.tuples.generated.Tuple4;
import org.fisco.bcos.web3j.tuples.generated.Tuple6;
import org.fisco.bcos.web3j.tuples.generated.Tuple7;
import org.fisco.bcos.web3j.tuples.generated.Tuple8;
import org.fisco.bcos.web3j.tuples.generated.Tuple9;
import org.fisco.bcos.web3j.tx.Contract;
import org.fisco.bcos.web3j.tx.TransactionManager;
import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version none.
 */
@SuppressWarnings("unchecked")
public class CreditCert extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b50615be980620000216000396000f300608060405260043610610128576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063187b9aeb1461012d57806318c4b7fb1461044a57806321db52d61461058157806329a1e9d1146105d8578063328c2d8e1461062f57806340f733be1461087f57806343230fcc146108fc5780634811088e14610a9f578063500ad42214610bbb5780635a6182b014610cf2578063601134ab14610f10578063712f3cba14610f6757806376334374146111d05780637e65f1df1461135857806382d8364c146115c15780638d93e7c014611740578063b6b4b7d0146118e3578063b7d237c314611a76578063c4472f8e14611acd578063da97bdf114611b5d578063e888bad414611cdc578063fd7c111714611d33575b600080fd5b34801561013957600080fd5b50610162600480360381019080803567ffffffffffffffff169060200190929190505050611f80565b604051808a67ffffffffffffffff1667ffffffffffffffff1681526020018967ffffffffffffffff1667ffffffffffffffff1681526020018060200180602001806020018060200180602001806020018867ffffffffffffffff1667ffffffffffffffff16815260200187810387528e818151815260200191508051906020019080838360005b838110156102045780820151818401526020810190506101e9565b50505050905090810190601f1680156102315780820380516001836020036101000a031916815260200191505b5087810386528d818151815260200191508051906020019080838360005b8381101561026a57808201518184015260208101905061024f565b50505050905090810190601f1680156102975780820380516001836020036101000a031916815260200191505b5087810385528c818151815260200191508051906020019080838360005b838110156102d05780820151818401526020810190506102b5565b50505050905090810190601f1680156102fd5780820380516001836020036101000a031916815260200191505b5087810384528b818151815260200191508051906020019080838360005b8381101561033657808201518184015260208101905061031b565b50505050905090810190601f1680156103635780820380516001836020036101000a031916815260200191505b5087810383528a818151815260200191508051906020019080838360005b8381101561039c578082015181840152602081019050610381565b50505050905090810190601f1680156103c95780820380516001836020036101000a031916815260200191505b50878103825289818151815260200191508051906020019080838360005b838110156104025780820151818401526020810190506103e7565b50505050905090810190601f16801561042f5780820380516001836020036101000a031916815260200191505b509f5050505050505050505050505050505060405180910390f35b34801561045657600080fd5b5061055f600480360381019080803567ffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803563ffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803567ffffffffffffffff169060200190929190505050612438565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561058d57600080fd5b506105b6600480360381019080803567ffffffffffffffff169060200190929190505050612797565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b3480156105e457600080fd5b5061060d600480360381019080803567ffffffffffffffff1690602001909291905050506127eb565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561063b57600080fd5b50610664600480360381019080803567ffffffffffffffff16906020019092919050505061287d565b604051808967ffffffffffffffff1667ffffffffffffffff16815260200180602001806020018863ffffffff1663ffffffff16815260200180602001806020018767ffffffffffffffff1667ffffffffffffffff1681526020018663ffffffff1663ffffffff16815260200185810385528c818151815260200191508051906020019080838360005b838110156107085780820151818401526020810190506106ed565b50505050905090810190601f1680156107355780820380516001836020036101000a031916815260200191505b5085810384528b818151815260200191508051906020019080838360005b8381101561076e578082015181840152602081019050610753565b50505050905090810190601f16801561079b5780820380516001836020036101000a031916815260200191505b50858103835289818151815260200191508051906020019080838360005b838110156107d45780820151818401526020810190506107b9565b50505050905090810190601f1680156108015780820380516001836020036101000a031916815260200191505b50858103825288818151815260200191508051906020019080838360005b8381101561083a57808201518184015260208101905061081f565b50505050905090810190601f1680156108675780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390f35b34801561088b57600080fd5b506108b4600480360381019080803567ffffffffffffffff169060200190929190505050612bff565b604051808463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff1681526020018263ffffffff1663ffffffff168152602001935050505060405180910390f35b34801561090857600080fd5b50610a7d600480360381019080803567ffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803563ffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803567ffffffffffffffff169060200190929190803563ffffffff169060200190929190505050612db5565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b348015610aab57600080fd5b50610ad4600480360381019080803567ffffffffffffffff1690602001909291905050506131d9565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610b18578082015181840152602081019050610afd565b50505050905090810190601f168015610b455780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610b7e578082015181840152602081019050610b63565b50505050905090810190601f168015610bab5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b348015610bc757600080fd5b50610cd0600480360381019080803567ffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803563ffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803567ffffffffffffffff1690602001909291905050506133c6565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b348015610cfe57600080fd5b50610d23600480360381019080803563ffffffff169060200190929190505050613798565b604051808763ffffffff1663ffffffff168152602001806020018060200180602001806020018667ffffffffffffffff1667ffffffffffffffff16815260200185810385528a818151815260200191508051906020019080838360005b83811015610d9b578082015181840152602081019050610d80565b50505050905090810190601f168015610dc85780820380516001836020036101000a031916815260200191505b50858103845289818151815260200191508051906020019080838360005b83811015610e01578082015181840152602081019050610de6565b50505050905090810190601f168015610e2e5780820380516001836020036101000a031916815260200191505b50858103835288818151815260200191508051906020019080838360005b83811015610e67578082015181840152602081019050610e4c565b50505050905090810190601f168015610e945780820380516001836020036101000a031916815260200191505b50858103825287818151815260200191508051906020019080838360005b83811015610ecd578082015181840152602081019050610eb2565b50505050905090810190601f168015610efa5780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b348015610f1c57600080fd5b50610f45600480360381019080803567ffffffffffffffff169060200190929190505050613acd565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b348015610f7357600080fd5b506111ae600480360381019080803567ffffffffffffffff169060200190929190803567ffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803567ffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050613bf1565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b3480156111dc57600080fd5b50611215600480360381019080803567ffffffffffffffff169060200190929190803563ffffffff169060200190929190505050613fb8565b604051808767ffffffffffffffff1667ffffffffffffffff168152602001806020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff168152602001806020018467ffffffffffffffff1667ffffffffffffffff168152602001838103835288818151815260200191508051906020019080838360005b838110156112b1578082015181840152602081019050611296565b50505050905090810190601f1680156112de5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156113175780820151818401526020810190506112fc565b50505050905090810190601f1680156113445780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561136457600080fd5b5061159f600480360381019080803567ffffffffffffffff169060200190929190803567ffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803567ffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050614233565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b3480156115cd57600080fd5b5061171e600480360381019080803563ffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803567ffffffffffffffff169060200190929190505050614728565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561174c57600080fd5b506118c1600480360381019080803567ffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803563ffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803567ffffffffffffffff169060200190929190803563ffffffff169060200190929190505050614a75565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b3480156118ef57600080fd5b50611a54600480360381019080803563ffffffff169060200190929190803567ffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803567ffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050614e46565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b348015611a8257600080fd5b50611aab600480360381019080803567ffffffffffffffff169060200190929190505050615269565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b348015611ad957600080fd5b50611b02600480360381019080803567ffffffffffffffff169060200190929190505050615280565b604051808563ffffffff1663ffffffff1681526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff1681526020018263ffffffff1663ffffffff16815260200194505050505060405180910390f35b348015611b6957600080fd5b50611cba600480360381019080803563ffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803567ffffffffffffffff169060200190929190505050615326565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b348015611ce857600080fd5b50611d11600480360381019080803567ffffffffffffffff1690602001909291905050506156b7565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b348015611d3f57600080fd5b50611d78600480360381019080803567ffffffffffffffff169060200190929190803563ffffffff16906020019092919050505061576d565b604051808863ffffffff1663ffffffff1681526020018767ffffffffffffffff1667ffffffffffffffff1681526020018060200180602001806020018667ffffffffffffffff1667ffffffffffffffff1681526020018060200185810385528a818151815260200191508051906020019080838360005b83811015611e0a578082015181840152602081019050611def565b50505050905090810190601f168015611e375780820380516001836020036101000a031916815260200191505b50858103845289818151815260200191508051906020019080838360005b83811015611e70578082015181840152602081019050611e55565b50505050905090810190601f168015611e9d5780820380516001836020036101000a031916815260200191505b50858103835288818151815260200191508051906020019080838360005b83811015611ed6578082015181840152602081019050611ebb565b50505050905090810190601f168015611f035780820380516001836020036101000a031916815260200191505b50858103825286818151815260200191508051906020019080838360005b83811015611f3c578082015181840152602081019050611f21565b50505050905090810190601f168015611f695780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b6000806060806060806060806000806000600160008d67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614151515611fe457fe5b600160008c67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900467ffffffffffffffff168160000160089054906101000a900467ffffffffffffffff168260010183600201846003018560040186600501876006018860070160009054906101000a900467ffffffffffffffff16868054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121055780601f106120da57610100808354040283529160200191612105565b820191906000526020600020905b8154815290600101906020018083116120e857829003601f168201915b50505050509650858054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121a15780601f10612176576101008083540402835291602001916121a1565b820191906000526020600020905b81548152906001019060200180831161218457829003601f168201915b50505050509550848054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561223d5780601f106122125761010080835404028352916020019161223d565b820191906000526020600020905b81548152906001019060200180831161222057829003601f168201915b50505050509450838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122d95780601f106122ae576101008083540402835291602001916122d9565b820191906000526020600020905b8154815290600101906020018083116122bc57829003601f168201915b50505050509350828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123755780601f1061234a57610100808354040283529160200191612375565b820191906000526020600020905b81548152906001019060200180831161235857829003601f168201915b50505050509250818054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124115780601f106123e657610100808354040283529160200191612411565b820191906000526020600020905b8154815290600101906020018083116123f457829003601f168201915b50505050509150995099509950995099509950995099509950509193959799909294969850565b6000610100604051908101604052808a67ffffffffffffffff1681526020018981526020018863ffffffff1681526020018763ffffffff1681526020018663ffffffff1681526020018563ffffffff1681526020018481526020018367ffffffffffffffff168152506000808b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060070160008963ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506020820151816001019080519060200190612532929190615b18565b5060408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548163ffffffff021916908363ffffffff16021790555060a082015181600201600c6101000a81548163ffffffff021916908363ffffffff16021790555060c08201518160030190805190602001906125eb929190615b18565b5060e08201518160040160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050507f9ad04d8ada08848a84436e983c9eae4600bb2e28f31ec8ae63079676dba0ae72898989898787604051808767ffffffffffffffff1667ffffffffffffffff168152602001806020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff168152602001806020018467ffffffffffffffff1667ffffffffffffffff168152602001838103835288818151815260200191508051906020019080838360005b838110156126e15780820151818401526020810190506126c6565b50505050905090810190601f16801561270e5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561274757808201518184015260208101905061272c565b50505050905090810190601f1680156127745780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a16001905098975050505050505050565b60008060008060008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160089054906101000a900463ffffffff1691506032600a83020190508092505050919050565b6000806000808467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060030160009054906101000a900463ffffffff16905060038163ffffffff1614156128425760469150612877565b60028163ffffffff16141561285a5760509150612877565b60018163ffffffff16141561287257605a9150612877565b603c91505b50919050565b600060608060006060806000806000806000808c67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16141515156128df57fe5b6000808b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900467ffffffffffffffff1681600101826002018360030160009054906101000a900463ffffffff1684600401856005018660060160009054906101000a900467ffffffffffffffff168760060160089054906101000a900463ffffffff16868054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a085780601f106129dd57610100808354040283529160200191612a08565b820191906000526020600020905b8154815290600101906020018083116129eb57829003601f168201915b50505050509650858054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612aa45780601f10612a7957610100808354040283529160200191612aa4565b820191906000526020600020905b815481529060010190602001808311612a8757829003601f168201915b50505050509550838054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b405780601f10612b1557610100808354040283529160200191612b40565b820191906000526020600020905b815481529060010190602001808311612b2357829003601f168201915b50505050509350828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612bdc5780601f10612bb157610100808354040283529160200191612bdc565b820191906000526020600020905b815481529060010190602001808311612bbf57829003601f168201915b505050505092509850985098509850985098509850985050919395975091939597565b6000806000806000806000806000808a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614151515612c5d57fe5b600191505b60008060008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060070160008463ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16141515612d9c576000808967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060070160008363ffffffff1663ffffffff16815260200190815260200160002060020160089054906101000a900463ffffffff16840193506000808967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060070160008363ffffffff1663ffffffff168152602001908152602001600020600201600c9054906101000a900463ffffffff16830192508180600101925050612c62565b8284019050808484965096509650505050509193909250565b6000806000808b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614151515612e0a57fe5b610100604051908101604052808a67ffffffffffffffff1681526020018981526020018881526020018763ffffffff1681526020018681526020018581526020018467ffffffffffffffff1681526020018363ffffffff168152506000808b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506020820151816001019080519060200190612ed6929190615b18565b506040820151816002019080519060200190612ef3929190615b18565b5060608201518160030160006101000a81548163ffffffff021916908363ffffffff1602179055506080820151816004019080519060200190612f37929190615b18565b5060a0820151816005019080519060200190612f54929190615b18565b5060c08201518160060160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060e08201518160060160086101000a81548163ffffffff021916908363ffffffff1602179055509050507ff3d98d8e56e5db8d04b8204cd54ce081622693dbe4ccfe8c5db16f3be220b937898989888888604051808767ffffffffffffffff1667ffffffffffffffff168152602001806020018060200180602001806020018667ffffffffffffffff1667ffffffffffffffff16815260200185810385528a818151815260200191508051906020019080838360005b8381101561305557808201518184015260208101905061303a565b50505050905090810190601f1680156130825780820380516001836020036101000a031916815260200191505b50858103845289818151815260200191508051906020019080838360005b838110156130bb5780820151818401526020810190506130a0565b50505050905090810190601f1680156130e85780820380516001836020036101000a031916815260200191505b50858103835288818151815260200191508051906020019080838360005b83811015613121578082015181840152602081019050613106565b50505050905090810190601f16801561314e5780820380516001836020036101000a031916815260200191505b50858103825287818151815260200191508051906020019080838360005b8381101561318757808201518184015260208101905061316c565b50505050905090810190601f1680156131b45780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390a16001905098975050505050505050565b6060806000600160008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415151561323157fe5b600160008467ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600801600160008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600601818054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561331a5780601f106132ef5761010080835404028352916020019161331a565b820191906000526020600020905b8154815290600101906020018083116132fd57829003601f168201915b50505050509150808054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156133b65780601f1061338b576101008083540402835291602001916133b6565b820191906000526020600020905b81548152906001019060200180831161339957829003601f168201915b5050505050905091509150915091565b6000806000808b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060070160008963ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415151561343b57fe5b610100604051908101604052808a67ffffffffffffffff1681526020018981526020018863ffffffff1681526020018763ffffffff1681526020018663ffffffff1681526020018563ffffffff1681526020018481526020018367ffffffffffffffff168152506000808b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060070160008963ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506020820151816001019080519060200190613533929190615b18565b5060408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548163ffffffff021916908363ffffffff16021790555060a082015181600201600c6101000a81548163ffffffff021916908363ffffffff16021790555060c08201518160030190805190602001906135ec929190615b18565b5060e08201518160040160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050507f62038ad990fc53fc79393e75713462c86a62a496423826de9c4fd4baf834d2d8898989898787604051808767ffffffffffffffff1667ffffffffffffffff168152602001806020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff168152602001806020018467ffffffffffffffff1667ffffffffffffffff168152602001838103835288818151815260200191508051906020019080838360005b838110156136e25780820151818401526020810190506136c7565b50505050905090810190601f16801561370f5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561374857808201518184015260208101905061372d565b50505050905090810190601f1680156137755780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a16001905098975050505050505050565b60006060806060806000806000600260008a63ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16141515156137e857fe5b600260008963ffffffff1663ffffffff16815260200190815260200160002090508060000160009054906101000a900463ffffffff16816001018260020183600301846004018560050160009054906101000a900467ffffffffffffffff16848054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156138dc5780601f106138b1576101008083540402835291602001916138dc565b820191906000526020600020905b8154815290600101906020018083116138bf57829003601f168201915b50505050509450838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156139785780601f1061394d57610100808354040283529160200191613978565b820191906000526020600020905b81548152906001019060200180831161395b57829003601f168201915b50505050509350828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613a145780601f106139e957610100808354040283529160200191613a14565b820191906000526020600020905b8154815290600101906020018083116139f757829003601f168201915b50505050509250818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613ab05780601f10613a8557610100808354040283529160200191613ab0565b820191906000526020600020905b815481529060010190602001808311613a9357829003601f168201915b505050505091509650965096509650965096505091939550919395565b60008060008060009250600091506000808667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160089054906101000a900463ffffffff1690505b60008163ffffffff161115613b93576000808667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060070160008263ffffffff1663ffffffff16815260200190815260200160002060020160049054906101000a900463ffffffff1682019150808060019003915050613b18565b6000808667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160089054906101000a900463ffffffff1663ffffffff168263ffffffff16811515613be357fe5b049250829350505050919050565b6000610140604051908101604052808c67ffffffffffffffff1681526020018b67ffffffffffffffff1681526020018a81526020018981526020018881526020018781526020018681526020018581526020018467ffffffffffffffff16815260200183815250600160008d67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001019080519060200190613cf9929190615b18565b506060820151816002019080519060200190613d16929190615b18565b506080820151816003019080519060200190613d33929190615b18565b5060a0820151816004019080519060200190613d50929190615b18565b5060c0820151816005019080519060200190613d6d929190615b18565b5060e0820151816006019080519060200190613d8a929190615b18565b506101008201518160070160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550610120820151816008019080519060200190613dd8929190615b18565b509050507f69a06a3d7fdda7797ae65e6399f68137bb84005c8e6d77daa3683b1ef8f95ce48b8b8b8b8a88604051808767ffffffffffffffff1667ffffffffffffffff1681526020018667ffffffffffffffff1667ffffffffffffffff1681526020018060200180602001806020018567ffffffffffffffff1667ffffffffffffffff168152602001848103845288818151815260200191508051906020019080838360005b83811015613e99578082015181840152602081019050613e7e565b50505050905090810190601f168015613ec65780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b83811015613eff578082015181840152602081019050613ee4565b50505050905090810190601f168015613f2c5780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b83811015613f65578082015181840152602081019050613f4a565b50505050905090810190601f168015613f925780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390a1600190509a9950505050505050505050565b60006060600080606060008060008060008b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060070160008a63ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415151561403857fe5b6000808a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060070160008963ffffffff1663ffffffff16815260200190815260200160002090508060000160009054906101000a900467ffffffffffffffff16816001018260020160009054906101000a900463ffffffff168360020160049054906101000a900463ffffffff16846003018560040160009054906101000a900467ffffffffffffffff16848054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156141795780601f1061414e57610100808354040283529160200191614179565b820191906000526020600020905b81548152906001019060200180831161415c57829003601f168201915b50505050509450818054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156142155780601f106141ea57610100808354040283529160200191614215565b820191906000526020600020905b8154815290600101906020018083116141f857829003601f168201915b50505050509150965096509650965096509650509295509295509295565b600080600160008d67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415151561428957fe5b610140604051908101604052808c67ffffffffffffffff1681526020018b67ffffffffffffffff1681526020018a81526020018981526020018881526020018781526020018681526020018581526020018467ffffffffffffffff16815260200183815250600160008d67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550604082015181600101908051906020019061438f929190615b18565b5060608201518160020190805190602001906143ac929190615b18565b5060808201518160030190805190602001906143c9929190615b18565b5060a08201518160040190805190602001906143e6929190615b18565b5060c0820151816005019080519060200190614403929190615b18565b5060e0820151816006019080519060200190614420929190615b18565b506101008201518160070160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555061012082015181600801908051906020019061446e929190615b18565b509050507f046903f01721196f1b377b555a14cbb61391a0c311b96e42c9d277bf7178a6348b8b8b8b8a8a8989604051808967ffffffffffffffff1667ffffffffffffffff1681526020018867ffffffffffffffff1667ffffffffffffffff168152602001806020018060200180602001806020018767ffffffffffffffff1667ffffffffffffffff1681526020018060200186810386528c818151815260200191508051906020019080838360005b8381101561453957808201518184015260208101905061451e565b50505050905090810190601f1680156145665780820380516001836020036101000a031916815260200191505b5086810385528b818151815260200191508051906020019080838360005b8381101561459f578082015181840152602081019050614584565b50505050905090810190601f1680156145cc5780820380516001836020036101000a031916815260200191505b5086810384528a818151815260200191508051906020019080838360005b838110156146055780820151818401526020810190506145ea565b50505050905090810190601f1680156146325780820380516001836020036101000a031916815260200191505b50868103835289818151815260200191508051906020019080838360005b8381101561466b578082015181840152602081019050614650565b50505050905090810190601f1680156146985780820380516001836020036101000a031916815260200191505b50868103825287818151815260200191508051906020019080838360005b838110156146d15780820151818401526020810190506146b6565b50505050905090810190601f1680156146fe5780820380516001836020036101000a031916815260200191505b509d505050505050505050505050505060405180910390a1600190509a9950505050505050505050565b600060c0604051908101604052808863ffffffff1681526020018781526020018681526020018581526020018481526020018367ffffffffffffffff16815250600260008963ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160010190805190602001906147ca929190615b18565b5060408201518160020190805190602001906147e7929190615b18565b506060820151816003019080519060200190614804929190615b18565b506080820151816004019080519060200190614821929190615b18565b5060a08201518160050160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050507f53062a75e29d6bfd2791ac8b0ff03dffb785e9c2557e2c60797346e23e6cb7fa878787878787604051808763ffffffff1663ffffffff168152602001806020018060200180602001806020018667ffffffffffffffff1667ffffffffffffffff16815260200185810385528a818151815260200191508051906020019080838360005b838110156148f35780820151818401526020810190506148d8565b50505050905090810190601f1680156149205780820380516001836020036101000a031916815260200191505b50858103845289818151815260200191508051906020019080838360005b8381101561495957808201518184015260208101905061493e565b50505050905090810190601f1680156149865780820380516001836020036101000a031916815260200191505b50858103835288818151815260200191508051906020019080838360005b838110156149bf5780820151818401526020810190506149a4565b50505050905090810190601f1680156149ec5780820380516001836020036101000a031916815260200191505b50858103825287818151815260200191508051906020019080838360005b83811015614a25578082015181840152602081019050614a0a565b50505050905090810190601f168015614a525780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390a1600190509695505050505050565b6000610100604051908101604052808a67ffffffffffffffff1681526020018981526020018881526020018763ffffffff1681526020018681526020018581526020018467ffffffffffffffff1681526020018363ffffffff168152506000808b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506020820151816001019080519060200190614b43929190615b18565b506040820151816002019080519060200190614b60929190615b18565b5060608201518160030160006101000a81548163ffffffff021916908363ffffffff1602179055506080820151816004019080519060200190614ba4929190615b18565b5060a0820151816005019080519060200190614bc1929190615b18565b5060c08201518160060160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060e08201518160060160086101000a81548163ffffffff021916908363ffffffff1602179055509050507f25f8949da34cd6fc16cdadd26d55f54688321c36cbbf445ac3757e223f537016898989888888604051808767ffffffffffffffff1667ffffffffffffffff168152602001806020018060200180602001806020018667ffffffffffffffff1667ffffffffffffffff16815260200185810385528a818151815260200191508051906020019080838360005b83811015614cc2578082015181840152602081019050614ca7565b50505050905090810190601f168015614cef5780820380516001836020036101000a031916815260200191505b50858103845289818151815260200191508051906020019080838360005b83811015614d28578082015181840152602081019050614d0d565b50505050905090810190601f168015614d555780820380516001836020036101000a031916815260200191505b50858103835288818151815260200191508051906020019080838360005b83811015614d8e578082015181840152602081019050614d73565b50505050905090810190601f168015614dbb5780820380516001836020036101000a031916815260200191505b50858103825287818151815260200191508051906020019080838360005b83811015614df4578082015181840152602081019050614dd9565b50505050905090810190601f168015614e215780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390a16001905098975050505050505050565b6000806000808967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614151515614e9b57fe5b60e0604051908101604052808963ffffffff1681526020018867ffffffffffffffff1681526020018781526020018681526020018581526020018467ffffffffffffffff168152602001838152506000808967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060080160008a63ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001019080519060200190614fa1929190615b18565b506060820151816002019080519060200190614fbe929190615b18565b506080820151816003019080519060200190614fdb929190615b18565b5060a08201518160040160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060c0820151816005019080519060200190615027929190615b18565b509050507f059a260b167a5cffb77c83363386b0932522c3a9aa4b843156c5d38a844cde8e88888888888888604051808863ffffffff1663ffffffff1681526020018767ffffffffffffffff1667ffffffffffffffff1681526020018060200180602001806020018667ffffffffffffffff1667ffffffffffffffff1681526020018060200185810385528a818151815260200191508051906020019080838360005b838110156150e55780820151818401526020810190506150ca565b50505050905090810190601f1680156151125780820380516001836020036101000a031916815260200191505b50858103845289818151815260200191508051906020019080838360005b8381101561514b578082015181840152602081019050615130565b50505050905090810190601f1680156151785780820380516001836020036101000a031916815260200191505b50858103835288818151815260200191508051906020019080838360005b838110156151b1578082015181840152602081019050615196565b50505050905090810190601f1680156151de5780820380516001836020036101000a031916815260200191505b50858103825286818151815260200191508051906020019080838360005b838110156152175780820151818401526020810190506151fc565b50505050905090810190601f1680156152445780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390a160019050979650505050505050565b60008061527583613acd565b905080915050919050565b6000806000806000806000808867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16141515156152db57fe5b6152e486612797565b6152ed87615269565b6152f6886127eb565b01019050615303866127eb565b61530c87615269565b61531588612797565b839450945094509450509193509193565b600080600260008963ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff161415151561536c57fe5b60c0604051908101604052808863ffffffff1681526020018781526020018681526020018581526020018481526020018367ffffffffffffffff16815250600260008963ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff160217905550602082015181600101908051906020019061540c929190615b18565b506040820151816002019080519060200190615429929190615b18565b506060820151816003019080519060200190615446929190615b18565b506080820151816004019080519060200190615463929190615b18565b5060a08201518160050160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050507fad3f4af41019e58eee6edeec44249559b1045b1ef0c74093d2023a0b0225ffe1878787878787604051808763ffffffff1663ffffffff168152602001806020018060200180602001806020018667ffffffffffffffff1667ffffffffffffffff16815260200185810385528a818151815260200191508051906020019080838360005b8381101561553557808201518184015260208101905061551a565b50505050905090810190601f1680156155625780820380516001836020036101000a031916815260200191505b50858103845289818151815260200191508051906020019080838360005b8381101561559b578082015181840152602081019050615580565b50505050905090810190601f1680156155c85780820380516001836020036101000a031916815260200191505b50858103835288818151815260200191508051906020019080838360005b838110156156015780820151818401526020810190506155e6565b50505050905090810190601f16801561562e5780820380516001836020036101000a031916815260200191505b50858103825287818151815260200191508051906020019080838360005b8381101561566757808201518184015260208101905061564c565b50505050905090810190601f1680156156945780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390a1600190509695505050505050565b60008060008060008060008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415151561571157fe5b61571a85612bff565b80945081955082935050505060968163ffffffff1610806157415750605a8363ffffffff16105b806157525750603c8263ffffffff16105b156157605760009350615765565b600193505b505050919050565b6000806060806060600060606000806000808c67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060080160008b63ffffffff1663ffffffff16815260200190815260200160002060000160049054906101000a900467ffffffffffffffff1667ffffffffffffffff16141515156157ee57fe5b6000808b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060080160008a63ffffffff1663ffffffff16815260200190815260200160002090508060000160009054906101000a900463ffffffff168160000160049054906101000a900467ffffffffffffffff168260010183600201846003018560040160009054906101000a900467ffffffffffffffff1686600501848054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156159225780601f106158f757610100808354040283529160200191615922565b820191906000526020600020905b81548152906001019060200180831161590557829003601f168201915b50505050509450838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156159be5780601f10615993576101008083540402835291602001916159be565b820191906000526020600020905b8154815290600101906020018083116159a157829003601f168201915b50505050509350828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015615a5a5780601f10615a2f57610100808354040283529160200191615a5a565b820191906000526020600020905b815481529060010190602001808311615a3d57829003601f168201915b50505050509250808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015615af65780601f10615acb57610100808354040283529160200191615af6565b820191906000526020600020905b815481529060010190602001808311615ad957829003601f168201915b5050505050905097509750975097509750975097505092959891949750929550565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10615b5957805160ff1916838001178555615b87565b82800160010185558215615b87579182015b82811115615b86578251825591602001919060010190615b6b565b5b509050615b949190615b98565b5090565b615bba91905b80821115615bb6576000816000905550600101615b9e565b5090565b905600a165627a7a723058204f29fe66f0a9beccdc803b8271bba317c465e83fc70dbaca9a0f7f410569232e0029";

    public static final String ABI = "[{\"constant\":true,\"inputs\":[{\"name\":\"certID\",\"type\":\"uint64\"}],\"name\":\"stuCertQuery\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"},{\"name\":\"\",\"type\":\"uint64\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"stuID\",\"type\":\"uint64\"},{\"name\":\"stuName\",\"type\":\"string\"},{\"name\":\"grades\",\"type\":\"uint32\"},{\"name\":\"averageGrade\",\"type\":\"uint32\"},{\"name\":\"obligatoryCredit\",\"type\":\"uint32\"},{\"name\":\"optionalCredit\",\"type\":\"uint32\"},{\"name\":\"extInfo\",\"type\":\"string\"},{\"name\":\"recordTime\",\"type\":\"uint64\"}],\"name\":\"stuGradeRecord\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"stuID\",\"type\":\"uint64\"}],\"name\":\"getM3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"stuID\",\"type\":\"uint64\"}],\"name\":\"getM1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"stuID\",\"type\":\"uint64\"}],\"name\":\"stuInfoQuery\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint32\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint64\"},{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"stuID\",\"type\":\"uint64\"}],\"name\":\"allCreditQuery\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"},{\"name\":\"\",\"type\":\"uint32\"},{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"stuID\",\"type\":\"uint64\"},{\"name\":\"stuName\",\"type\":\"string\"},{\"name\":\"usName\",\"type\":\"string\"},{\"name\":\"usLevel\",\"type\":\"uint32\"},{\"name\":\"major\",\"type\":\"string\"},{\"name\":\"extInfo\",\"type\":\"string\"},{\"name\":\"updateTime\",\"type\":\"uint64\"},{\"name\":\"grades\",\"type\":\"uint32\"}],\"name\":\"stuInfoUpdate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"certID\",\"type\":\"uint64\"}],\"name\":\"certSignatureQuery\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"stuID\",\"type\":\"uint64\"},{\"name\":\"stuName\",\"type\":\"string\"},{\"name\":\"grades\",\"type\":\"uint32\"},{\"name\":\"averageGrade\",\"type\":\"uint32\"},{\"name\":\"obligatoryCredit\",\"type\":\"uint32\"},{\"name\":\"optionalCredit\",\"type\":\"uint32\"},{\"name\":\"extInfo\",\"type\":\"string\"},{\"name\":\"updateTime\",\"type\":\"uint64\"}],\"name\":\"stuGradeUpdate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"actID\",\"type\":\"uint32\"}],\"name\":\"actInfoQuery\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"stuID\",\"type\":\"uint64\"}],\"name\":\"averageGradeQuery\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"certID\",\"type\":\"uint64\"},{\"name\":\"stuID\",\"type\":\"uint64\"},{\"name\":\"stuName\",\"type\":\"string\"},{\"name\":\"usName\",\"type\":\"string\"},{\"name\":\"major\",\"type\":\"string\"},{\"name\":\"studyTime\",\"type\":\"string\"},{\"name\":\"certStatus\",\"type\":\"string\"},{\"name\":\"extInfo\",\"type\":\"string\"},{\"name\":\"initTime\",\"type\":\"uint64\"},{\"name\":\"certSignature\",\"type\":\"string\"}],\"name\":\"certInfoInit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"stuID\",\"type\":\"uint64\"},{\"name\":\"grades\",\"type\":\"uint32\"}],\"name\":\"stuGradeQuery\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint32\"},{\"name\":\"\",\"type\":\"uint32\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"certID\",\"type\":\"uint64\"},{\"name\":\"stuID\",\"type\":\"uint64\"},{\"name\":\"stuName\",\"type\":\"string\"},{\"name\":\"usName\",\"type\":\"string\"},{\"name\":\"major\",\"type\":\"string\"},{\"name\":\"studyTime\",\"type\":\"string\"},{\"name\":\"certStatus\",\"type\":\"string\"},{\"name\":\"extInfo\",\"type\":\"string\"},{\"name\":\"updateTime\",\"type\":\"uint64\"},{\"name\":\"certSignature\",\"type\":\"string\"}],\"name\":\"certInfoUpdate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"actID\",\"type\":\"uint32\"},{\"name\":\"actName\",\"type\":\"string\"},{\"name\":\"organizer\",\"type\":\"string\"},{\"name\":\"status\",\"type\":\"string\"},{\"name\":\"extInfo\",\"type\":\"string\"},{\"name\":\"registerTime\",\"type\":\"uint64\"}],\"name\":\"activityRegister\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"stuID\",\"type\":\"uint64\"},{\"name\":\"stuName\",\"type\":\"string\"},{\"name\":\"usName\",\"type\":\"string\"},{\"name\":\"usLevel\",\"type\":\"uint32\"},{\"name\":\"major\",\"type\":\"string\"},{\"name\":\"extInfo\",\"type\":\"string\"},{\"name\":\"registerTime\",\"type\":\"uint64\"},{\"name\":\"grades\",\"type\":\"uint32\"}],\"name\":\"stuInfoInit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"actID\",\"type\":\"uint32\"},{\"name\":\"stuID\",\"type\":\"uint64\"},{\"name\":\"actName\",\"type\":\"string\"},{\"name\":\"stuName\",\"type\":\"string\"},{\"name\":\"extInfo\",\"type\":\"string\"},{\"name\":\"recordTime\",\"type\":\"uint64\"},{\"name\":\"actSignature\",\"type\":\"string\"}],\"name\":\"activityGradeRecode\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"stuID\",\"type\":\"uint64\"}],\"name\":\"getM2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"stuID\",\"type\":\"uint64\"}],\"name\":\"creditEvaluation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"},{\"name\":\"\",\"type\":\"uint32\"},{\"name\":\"\",\"type\":\"uint32\"},{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"actID\",\"type\":\"uint32\"},{\"name\":\"actName\",\"type\":\"string\"},{\"name\":\"organizer\",\"type\":\"string\"},{\"name\":\"status\",\"type\":\"string\"},{\"name\":\"extInfo\",\"type\":\"string\"},{\"name\":\"updateTime\",\"type\":\"uint64\"}],\"name\":\"activityInfoUpdate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"stuID\",\"type\":\"uint64\"}],\"name\":\"creditInfoCheck\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"stuID\",\"type\":\"uint64\"},{\"name\":\"actID\",\"type\":\"uint32\"}],\"name\":\"stuActQuery\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"},{\"name\":\"\",\"type\":\"uint64\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint64\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"stuID\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"stuName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"usName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"major\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"extInfo\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"registerTime\",\"type\":\"uint64\"}],\"name\":\"stuInfoInitEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"stuID\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"stuName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"usName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"major\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"extInfo\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updateTime\",\"type\":\"uint64\"}],\"name\":\"stuInfoUpdateEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"stuID\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"stuName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"grades\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"averageGrade\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"extInfo\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"recordTime\",\"type\":\"uint64\"}],\"name\":\"stuGradeRecordEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"stuID\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"stuName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"grades\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"averageGrade\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"extInfo\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updateTime\",\"type\":\"uint64\"}],\"name\":\"stuGradeUpdateEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"actID\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"actName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"sponsor\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"status\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"extInfo\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"registerTime\",\"type\":\"uint64\"}],\"name\":\"activityRegisterEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"actID\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"actName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"sponsor\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"status\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"extInfo\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updateTime\",\"type\":\"uint64\"}],\"name\":\"activityInfoUpdateEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"actID\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"stuID\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"actName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"stuName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"extInfo\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"recordTime\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"actSignature\",\"type\":\"string\"}],\"name\":\"activityGradeRecodeEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"certID\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"stuID\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"stuName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"usName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"studyTime\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"initTime\",\"type\":\"uint64\"}],\"name\":\"certInfoInitEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"certID\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"stuID\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"stuName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"usName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"studyTime\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"certStatus\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updateTime\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"certSignature\",\"type\":\"string\"}],\"name\":\"certInfoUpdateEvent\",\"type\":\"event\"}]";

    public static final String FUNC_STUCERTQUERY = "stuCertQuery";

    public static final String FUNC_STUGRADERECORD = "stuGradeRecord";

    public static final String FUNC_GETM3 = "getM3";

    public static final String FUNC_GETM1 = "getM1";

    public static final String FUNC_STUINFOQUERY = "stuInfoQuery";

    public static final String FUNC_ALLCREDITQUERY = "allCreditQuery";

    public static final String FUNC_STUINFOUPDATE = "stuInfoUpdate";

    public static final String FUNC_CERTSIGNATUREQUERY = "certSignatureQuery";

    public static final String FUNC_STUGRADEUPDATE = "stuGradeUpdate";

    public static final String FUNC_ACTINFOQUERY = "actInfoQuery";

    public static final String FUNC_AVERAGEGRADEQUERY = "averageGradeQuery";

    public static final String FUNC_CERTINFOINIT = "certInfoInit";

    public static final String FUNC_STUGRADEQUERY = "stuGradeQuery";

    public static final String FUNC_CERTINFOUPDATE = "certInfoUpdate";

    public static final String FUNC_ACTIVITYREGISTER = "activityRegister";

    public static final String FUNC_STUINFOINIT = "stuInfoInit";

    public static final String FUNC_ACTIVITYGRADERECODE = "activityGradeRecode";

    public static final String FUNC_GETM2 = "getM2";

    public static final String FUNC_CREDITEVALUATION = "creditEvaluation";

    public static final String FUNC_ACTIVITYINFOUPDATE = "activityInfoUpdate";

    public static final String FUNC_CREDITINFOCHECK = "creditInfoCheck";

    public static final String FUNC_STUACTQUERY = "stuActQuery";

    public static final Event STUINFOINITEVENT_EVENT = new Event("stuInfoInitEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint64>() {}));
    ;

    public static final Event STUINFOUPDATEEVENT_EVENT = new Event("stuInfoUpdateEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint64>() {}));
    ;

    public static final Event STUGRADERECORDEVENT_EVENT = new Event("stuGradeRecordEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint32>() {}, new TypeReference<Uint32>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint64>() {}));
    ;

    public static final Event STUGRADEUPDATEEVENT_EVENT = new Event("stuGradeUpdateEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint32>() {}, new TypeReference<Uint32>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint64>() {}));
    ;

    public static final Event ACTIVITYREGISTEREVENT_EVENT = new Event("activityRegisterEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint32>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint64>() {}));
    ;

    public static final Event ACTIVITYINFOUPDATEEVENT_EVENT = new Event("activityInfoUpdateEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint32>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint64>() {}));
    ;

    public static final Event ACTIVITYGRADERECODEEVENT_EVENT = new Event("activityGradeRecodeEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint32>() {}, new TypeReference<Uint64>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint64>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event CERTINFOINITEVENT_EVENT = new Event("certInfoInitEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {}, new TypeReference<Uint64>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint64>() {}));
    ;

    public static final Event CERTINFOUPDATEEVENT_EVENT = new Event("certInfoUpdateEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {}, new TypeReference<Uint64>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint64>() {}, new TypeReference<Utf8String>() {}));
    ;

    @Deprecated
    protected CreditCert(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected CreditCert(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected CreditCert(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected CreditCert(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<Tuple9<BigInteger, BigInteger, String, String, String, String, String, String, BigInteger>> stuCertQuery(BigInteger certID) {
        final Function function = new Function(FUNC_STUCERTQUERY, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(certID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {}, new TypeReference<Uint64>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint64>() {}));
        return new RemoteCall<Tuple9<BigInteger, BigInteger, String, String, String, String, String, String, BigInteger>>(
                new Callable<Tuple9<BigInteger, BigInteger, String, String, String, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple9<BigInteger, BigInteger, String, String, String, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple9<BigInteger, BigInteger, String, String, String, String, String, String, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (String) results.get(5).getValue(), 
                                (String) results.get(6).getValue(), 
                                (String) results.get(7).getValue(), 
                                (BigInteger) results.get(8).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> stuGradeRecord(BigInteger stuID, String stuName, BigInteger grades, BigInteger averageGrade, BigInteger obligatoryCredit, BigInteger optionalCredit, String extInfo, BigInteger recordTime) {
        final Function function = new Function(
                FUNC_STUGRADERECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(grades), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(averageGrade), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(obligatoryCredit), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(optionalCredit), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(recordTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void stuGradeRecord(BigInteger stuID, String stuName, BigInteger grades, BigInteger averageGrade, BigInteger obligatoryCredit, BigInteger optionalCredit, String extInfo, BigInteger recordTime, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_STUGRADERECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(grades), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(averageGrade), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(obligatoryCredit), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(optionalCredit), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(recordTime)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String stuGradeRecordSeq(BigInteger stuID, String stuName, BigInteger grades, BigInteger averageGrade, BigInteger obligatoryCredit, BigInteger optionalCredit, String extInfo, BigInteger recordTime) {
        final Function function = new Function(
                FUNC_STUGRADERECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(grades), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(averageGrade), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(obligatoryCredit), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(optionalCredit), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(recordTime)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> getM3(BigInteger stuID) {
        final Function function = new Function(
                FUNC_GETM3, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void getM3(BigInteger stuID, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_GETM3, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getM3Seq(BigInteger stuID) {
        final Function function = new Function(
                FUNC_GETM3, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> getM1(BigInteger stuID) {
        final Function function = new Function(
                FUNC_GETM1, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void getM1(BigInteger stuID, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_GETM1, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getM1Seq(BigInteger stuID) {
        final Function function = new Function(
                FUNC_GETM1, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<Tuple8<BigInteger, String, String, BigInteger, String, String, BigInteger, BigInteger>> stuInfoQuery(BigInteger stuID) {
        final Function function = new Function(FUNC_STUINFOQUERY, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint32>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint64>() {}, new TypeReference<Uint32>() {}));
        return new RemoteCall<Tuple8<BigInteger, String, String, BigInteger, String, String, BigInteger, BigInteger>>(
                new Callable<Tuple8<BigInteger, String, String, BigInteger, String, String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple8<BigInteger, String, String, BigInteger, String, String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple8<BigInteger, String, String, BigInteger, String, String, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (String) results.get(5).getValue(), 
                                (BigInteger) results.get(6).getValue(), 
                                (BigInteger) results.get(7).getValue());
                    }
                });
    }

    public RemoteCall<Tuple3<BigInteger, BigInteger, BigInteger>> allCreditQuery(BigInteger stuID) {
        final Function function = new Function(FUNC_ALLCREDITQUERY, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint32>() {}, new TypeReference<Uint32>() {}, new TypeReference<Uint32>() {}));
        return new RemoteCall<Tuple3<BigInteger, BigInteger, BigInteger>>(
                new Callable<Tuple3<BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple3<BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> stuInfoUpdate(BigInteger stuID, String stuName, String usName, BigInteger usLevel, String major, String extInfo, BigInteger updateTime, BigInteger grades) {
        final Function function = new Function(
                FUNC_STUINFOUPDATE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(usName), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(usLevel), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(major), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(updateTime), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(grades)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void stuInfoUpdate(BigInteger stuID, String stuName, String usName, BigInteger usLevel, String major, String extInfo, BigInteger updateTime, BigInteger grades, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_STUINFOUPDATE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(usName), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(usLevel), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(major), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(updateTime), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(grades)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String stuInfoUpdateSeq(BigInteger stuID, String stuName, String usName, BigInteger usLevel, String major, String extInfo, BigInteger updateTime, BigInteger grades) {
        final Function function = new Function(
                FUNC_STUINFOUPDATE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(usName), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(usLevel), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(major), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(updateTime), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(grades)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<Tuple2<String, String>> certSignatureQuery(BigInteger certID) {
        final Function function = new Function(FUNC_CERTSIGNATUREQUERY, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(certID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple2<String, String>>(
                new Callable<Tuple2<String, String>>() {
                    @Override
                    public Tuple2<String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<String, String>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> stuGradeUpdate(BigInteger stuID, String stuName, BigInteger grades, BigInteger averageGrade, BigInteger obligatoryCredit, BigInteger optionalCredit, String extInfo, BigInteger updateTime) {
        final Function function = new Function(
                FUNC_STUGRADEUPDATE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(grades), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(averageGrade), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(obligatoryCredit), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(optionalCredit), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(updateTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void stuGradeUpdate(BigInteger stuID, String stuName, BigInteger grades, BigInteger averageGrade, BigInteger obligatoryCredit, BigInteger optionalCredit, String extInfo, BigInteger updateTime, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_STUGRADEUPDATE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(grades), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(averageGrade), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(obligatoryCredit), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(optionalCredit), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(updateTime)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String stuGradeUpdateSeq(BigInteger stuID, String stuName, BigInteger grades, BigInteger averageGrade, BigInteger obligatoryCredit, BigInteger optionalCredit, String extInfo, BigInteger updateTime) {
        final Function function = new Function(
                FUNC_STUGRADEUPDATE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(grades), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(averageGrade), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(obligatoryCredit), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(optionalCredit), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(updateTime)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<Tuple6<BigInteger, String, String, String, String, BigInteger>> actInfoQuery(BigInteger actID) {
        final Function function = new Function(FUNC_ACTINFOQUERY, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(actID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint32>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint64>() {}));
        return new RemoteCall<Tuple6<BigInteger, String, String, String, String, BigInteger>>(
                new Callable<Tuple6<BigInteger, String, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple6<BigInteger, String, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple6<BigInteger, String, String, String, String, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> averageGradeQuery(BigInteger stuID) {
        final Function function = new Function(
                FUNC_AVERAGEGRADEQUERY, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void averageGradeQuery(BigInteger stuID, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_AVERAGEGRADEQUERY, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String averageGradeQuerySeq(BigInteger stuID) {
        final Function function = new Function(
                FUNC_AVERAGEGRADEQUERY, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> certInfoInit(BigInteger certID, BigInteger stuID, String stuName, String usName, String major, String studyTime, String certStatus, String extInfo, BigInteger initTime, String certSignature) {
        final Function function = new Function(
                FUNC_CERTINFOINIT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(certID), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(usName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(major), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(studyTime), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(certStatus), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(initTime), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(certSignature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void certInfoInit(BigInteger certID, BigInteger stuID, String stuName, String usName, String major, String studyTime, String certStatus, String extInfo, BigInteger initTime, String certSignature, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_CERTINFOINIT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(certID), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(usName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(major), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(studyTime), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(certStatus), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(initTime), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(certSignature)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String certInfoInitSeq(BigInteger certID, BigInteger stuID, String stuName, String usName, String major, String studyTime, String certStatus, String extInfo, BigInteger initTime, String certSignature) {
        final Function function = new Function(
                FUNC_CERTINFOINIT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(certID), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(usName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(major), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(studyTime), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(certStatus), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(initTime), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(certSignature)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<Tuple6<BigInteger, String, BigInteger, BigInteger, String, BigInteger>> stuGradeQuery(BigInteger stuID, BigInteger grades) {
        final Function function = new Function(FUNC_STUGRADEQUERY, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(grades)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint32>() {}, new TypeReference<Uint32>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint64>() {}));
        return new RemoteCall<Tuple6<BigInteger, String, BigInteger, BigInteger, String, BigInteger>>(
                new Callable<Tuple6<BigInteger, String, BigInteger, BigInteger, String, BigInteger>>() {
                    @Override
                    public Tuple6<BigInteger, String, BigInteger, BigInteger, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple6<BigInteger, String, BigInteger, BigInteger, String, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> certInfoUpdate(BigInteger certID, BigInteger stuID, String stuName, String usName, String major, String studyTime, String certStatus, String extInfo, BigInteger updateTime, String certSignature) {
        final Function function = new Function(
                FUNC_CERTINFOUPDATE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(certID), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(usName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(major), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(studyTime), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(certStatus), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(updateTime), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(certSignature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void certInfoUpdate(BigInteger certID, BigInteger stuID, String stuName, String usName, String major, String studyTime, String certStatus, String extInfo, BigInteger updateTime, String certSignature, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_CERTINFOUPDATE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(certID), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(usName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(major), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(studyTime), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(certStatus), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(updateTime), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(certSignature)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String certInfoUpdateSeq(BigInteger certID, BigInteger stuID, String stuName, String usName, String major, String studyTime, String certStatus, String extInfo, BigInteger updateTime, String certSignature) {
        final Function function = new Function(
                FUNC_CERTINFOUPDATE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(certID), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(usName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(major), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(studyTime), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(certStatus), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(updateTime), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(certSignature)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> activityRegister(BigInteger actID, String actName, String organizer, String status, String extInfo, BigInteger registerTime) {
        final Function function = new Function(
                FUNC_ACTIVITYREGISTER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(actID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(actName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(organizer), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(status), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(registerTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void activityRegister(BigInteger actID, String actName, String organizer, String status, String extInfo, BigInteger registerTime, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_ACTIVITYREGISTER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(actID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(actName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(organizer), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(status), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(registerTime)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String activityRegisterSeq(BigInteger actID, String actName, String organizer, String status, String extInfo, BigInteger registerTime) {
        final Function function = new Function(
                FUNC_ACTIVITYREGISTER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(actID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(actName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(organizer), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(status), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(registerTime)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> stuInfoInit(BigInteger stuID, String stuName, String usName, BigInteger usLevel, String major, String extInfo, BigInteger registerTime, BigInteger grades) {
        final Function function = new Function(
                FUNC_STUINFOINIT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(usName), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(usLevel), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(major), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(registerTime), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(grades)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void stuInfoInit(BigInteger stuID, String stuName, String usName, BigInteger usLevel, String major, String extInfo, BigInteger registerTime, BigInteger grades, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_STUINFOINIT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(usName), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(usLevel), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(major), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(registerTime), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(grades)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String stuInfoInitSeq(BigInteger stuID, String stuName, String usName, BigInteger usLevel, String major, String extInfo, BigInteger registerTime, BigInteger grades) {
        final Function function = new Function(
                FUNC_STUINFOINIT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(usName), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(usLevel), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(major), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(registerTime), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(grades)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> activityGradeRecode(BigInteger actID, BigInteger stuID, String actName, String stuName, String extInfo, BigInteger recordTime, String actSignature) {
        final Function function = new Function(
                FUNC_ACTIVITYGRADERECODE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(actID), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(actName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(recordTime), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(actSignature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void activityGradeRecode(BigInteger actID, BigInteger stuID, String actName, String stuName, String extInfo, BigInteger recordTime, String actSignature, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_ACTIVITYGRADERECODE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(actID), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(actName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(recordTime), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(actSignature)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String activityGradeRecodeSeq(BigInteger actID, BigInteger stuID, String actName, String stuName, String extInfo, BigInteger recordTime, String actSignature) {
        final Function function = new Function(
                FUNC_ACTIVITYGRADERECODE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(actID), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(actName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(stuName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(recordTime), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(actSignature)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> getM2(BigInteger stuID) {
        final Function function = new Function(
                FUNC_GETM2, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void getM2(BigInteger stuID, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_GETM2, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getM2Seq(BigInteger stuID) {
        final Function function = new Function(
                FUNC_GETM2, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<Tuple4<BigInteger, BigInteger, BigInteger, BigInteger>> creditEvaluation(BigInteger stuID) {
        final Function function = new Function(FUNC_CREDITEVALUATION, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint32>() {}, new TypeReference<Uint32>() {}, new TypeReference<Uint32>() {}, new TypeReference<Uint32>() {}));
        return new RemoteCall<Tuple4<BigInteger, BigInteger, BigInteger, BigInteger>>(
                new Callable<Tuple4<BigInteger, BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple4<BigInteger, BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<BigInteger, BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> activityInfoUpdate(BigInteger actID, String actName, String organizer, String status, String extInfo, BigInteger updateTime) {
        final Function function = new Function(
                FUNC_ACTIVITYINFOUPDATE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(actID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(actName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(organizer), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(status), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(updateTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void activityInfoUpdate(BigInteger actID, String actName, String organizer, String status, String extInfo, BigInteger updateTime, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_ACTIVITYINFOUPDATE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(actID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(actName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(organizer), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(status), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(updateTime)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String activityInfoUpdateSeq(BigInteger actID, String actName, String organizer, String status, String extInfo, BigInteger updateTime) {
        final Function function = new Function(
                FUNC_ACTIVITYINFOUPDATE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(actID), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(actName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(organizer), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(status), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(extInfo), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(updateTime)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<BigInteger> creditInfoCheck(BigInteger stuID) {
        final Function function = new Function(FUNC_CREDITINFOCHECK, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint32>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<Tuple7<BigInteger, BigInteger, String, String, String, BigInteger, String>> stuActQuery(BigInteger stuID, BigInteger actID) {
        final Function function = new Function(FUNC_STUACTQUERY, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint64(stuID), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint32(actID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint32>() {}, new TypeReference<Uint64>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint64>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple7<BigInteger, BigInteger, String, String, String, BigInteger, String>>(
                new Callable<Tuple7<BigInteger, BigInteger, String, String, String, BigInteger, String>>() {
                    @Override
                    public Tuple7<BigInteger, BigInteger, String, String, String, BigInteger, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<BigInteger, BigInteger, String, String, String, BigInteger, String>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (String) results.get(6).getValue());
                    }
                });
    }

    public List<StuInfoInitEventEventResponse> getStuInfoInitEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(STUINFOINITEVENT_EVENT, transactionReceipt);
        ArrayList<StuInfoInitEventEventResponse> responses = new ArrayList<StuInfoInitEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            StuInfoInitEventEventResponse typedResponse = new StuInfoInitEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.stuID = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.stuName = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.usName = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.major = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.extInfo = (String) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.registerTime = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<StuInfoInitEventEventResponse> stuInfoInitEventEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, StuInfoInitEventEventResponse>() {
            @Override
            public StuInfoInitEventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(STUINFOINITEVENT_EVENT, log);
                StuInfoInitEventEventResponse typedResponse = new StuInfoInitEventEventResponse();
                typedResponse.log = log;
                typedResponse.stuID = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.stuName = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.usName = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.major = (String) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.extInfo = (String) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse.registerTime = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<StuInfoInitEventEventResponse> stuInfoInitEventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(STUINFOINITEVENT_EVENT));
        return stuInfoInitEventEventFlowable(filter);
    }

    public List<StuInfoUpdateEventEventResponse> getStuInfoUpdateEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(STUINFOUPDATEEVENT_EVENT, transactionReceipt);
        ArrayList<StuInfoUpdateEventEventResponse> responses = new ArrayList<StuInfoUpdateEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            StuInfoUpdateEventEventResponse typedResponse = new StuInfoUpdateEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.stuID = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.stuName = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.usName = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.major = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.extInfo = (String) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.updateTime = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<StuInfoUpdateEventEventResponse> stuInfoUpdateEventEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, StuInfoUpdateEventEventResponse>() {
            @Override
            public StuInfoUpdateEventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(STUINFOUPDATEEVENT_EVENT, log);
                StuInfoUpdateEventEventResponse typedResponse = new StuInfoUpdateEventEventResponse();
                typedResponse.log = log;
                typedResponse.stuID = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.stuName = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.usName = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.major = (String) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.extInfo = (String) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse.updateTime = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<StuInfoUpdateEventEventResponse> stuInfoUpdateEventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(STUINFOUPDATEEVENT_EVENT));
        return stuInfoUpdateEventEventFlowable(filter);
    }

    public List<StuGradeRecordEventEventResponse> getStuGradeRecordEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(STUGRADERECORDEVENT_EVENT, transactionReceipt);
        ArrayList<StuGradeRecordEventEventResponse> responses = new ArrayList<StuGradeRecordEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            StuGradeRecordEventEventResponse typedResponse = new StuGradeRecordEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.stuID = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.stuName = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.grades = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.averageGrade = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.extInfo = (String) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.recordTime = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<StuGradeRecordEventEventResponse> stuGradeRecordEventEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, StuGradeRecordEventEventResponse>() {
            @Override
            public StuGradeRecordEventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(STUGRADERECORDEVENT_EVENT, log);
                StuGradeRecordEventEventResponse typedResponse = new StuGradeRecordEventEventResponse();
                typedResponse.log = log;
                typedResponse.stuID = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.stuName = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.grades = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.averageGrade = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.extInfo = (String) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse.recordTime = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<StuGradeRecordEventEventResponse> stuGradeRecordEventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(STUGRADERECORDEVENT_EVENT));
        return stuGradeRecordEventEventFlowable(filter);
    }

    public List<StuGradeUpdateEventEventResponse> getStuGradeUpdateEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(STUGRADEUPDATEEVENT_EVENT, transactionReceipt);
        ArrayList<StuGradeUpdateEventEventResponse> responses = new ArrayList<StuGradeUpdateEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            StuGradeUpdateEventEventResponse typedResponse = new StuGradeUpdateEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.stuID = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.stuName = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.grades = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.averageGrade = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.extInfo = (String) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.updateTime = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<StuGradeUpdateEventEventResponse> stuGradeUpdateEventEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, StuGradeUpdateEventEventResponse>() {
            @Override
            public StuGradeUpdateEventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(STUGRADEUPDATEEVENT_EVENT, log);
                StuGradeUpdateEventEventResponse typedResponse = new StuGradeUpdateEventEventResponse();
                typedResponse.log = log;
                typedResponse.stuID = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.stuName = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.grades = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.averageGrade = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.extInfo = (String) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse.updateTime = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<StuGradeUpdateEventEventResponse> stuGradeUpdateEventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(STUGRADEUPDATEEVENT_EVENT));
        return stuGradeUpdateEventEventFlowable(filter);
    }

    public List<ActivityRegisterEventEventResponse> getActivityRegisterEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ACTIVITYREGISTEREVENT_EVENT, transactionReceipt);
        ArrayList<ActivityRegisterEventEventResponse> responses = new ArrayList<ActivityRegisterEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ActivityRegisterEventEventResponse typedResponse = new ActivityRegisterEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.actID = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.actName = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.sponsor = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.status = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.extInfo = (String) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.registerTime = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ActivityRegisterEventEventResponse> activityRegisterEventEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, ActivityRegisterEventEventResponse>() {
            @Override
            public ActivityRegisterEventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ACTIVITYREGISTEREVENT_EVENT, log);
                ActivityRegisterEventEventResponse typedResponse = new ActivityRegisterEventEventResponse();
                typedResponse.log = log;
                typedResponse.actID = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.actName = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.sponsor = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.status = (String) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.extInfo = (String) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse.registerTime = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ActivityRegisterEventEventResponse> activityRegisterEventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ACTIVITYREGISTEREVENT_EVENT));
        return activityRegisterEventEventFlowable(filter);
    }

    public List<ActivityInfoUpdateEventEventResponse> getActivityInfoUpdateEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ACTIVITYINFOUPDATEEVENT_EVENT, transactionReceipt);
        ArrayList<ActivityInfoUpdateEventEventResponse> responses = new ArrayList<ActivityInfoUpdateEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ActivityInfoUpdateEventEventResponse typedResponse = new ActivityInfoUpdateEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.actID = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.actName = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.sponsor = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.status = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.extInfo = (String) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.updateTime = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ActivityInfoUpdateEventEventResponse> activityInfoUpdateEventEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, ActivityInfoUpdateEventEventResponse>() {
            @Override
            public ActivityInfoUpdateEventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ACTIVITYINFOUPDATEEVENT_EVENT, log);
                ActivityInfoUpdateEventEventResponse typedResponse = new ActivityInfoUpdateEventEventResponse();
                typedResponse.log = log;
                typedResponse.actID = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.actName = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.sponsor = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.status = (String) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.extInfo = (String) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse.updateTime = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ActivityInfoUpdateEventEventResponse> activityInfoUpdateEventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ACTIVITYINFOUPDATEEVENT_EVENT));
        return activityInfoUpdateEventEventFlowable(filter);
    }

    public List<ActivityGradeRecodeEventEventResponse> getActivityGradeRecodeEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ACTIVITYGRADERECODEEVENT_EVENT, transactionReceipt);
        ArrayList<ActivityGradeRecodeEventEventResponse> responses = new ArrayList<ActivityGradeRecodeEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ActivityGradeRecodeEventEventResponse typedResponse = new ActivityGradeRecodeEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.actID = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.stuID = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.actName = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.stuName = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.extInfo = (String) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.recordTime = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
            typedResponse.actSignature = (String) eventValues.getNonIndexedValues().get(6).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ActivityGradeRecodeEventEventResponse> activityGradeRecodeEventEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, ActivityGradeRecodeEventEventResponse>() {
            @Override
            public ActivityGradeRecodeEventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ACTIVITYGRADERECODEEVENT_EVENT, log);
                ActivityGradeRecodeEventEventResponse typedResponse = new ActivityGradeRecodeEventEventResponse();
                typedResponse.log = log;
                typedResponse.actID = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.stuID = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.actName = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.stuName = (String) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.extInfo = (String) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse.recordTime = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
                typedResponse.actSignature = (String) eventValues.getNonIndexedValues().get(6).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ActivityGradeRecodeEventEventResponse> activityGradeRecodeEventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ACTIVITYGRADERECODEEVENT_EVENT));
        return activityGradeRecodeEventEventFlowable(filter);
    }

    public List<CertInfoInitEventEventResponse> getCertInfoInitEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(CERTINFOINITEVENT_EVENT, transactionReceipt);
        ArrayList<CertInfoInitEventEventResponse> responses = new ArrayList<CertInfoInitEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            CertInfoInitEventEventResponse typedResponse = new CertInfoInitEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.certID = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.stuID = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.stuName = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.usName = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.studyTime = (String) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.initTime = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<CertInfoInitEventEventResponse> certInfoInitEventEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, CertInfoInitEventEventResponse>() {
            @Override
            public CertInfoInitEventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(CERTINFOINITEVENT_EVENT, log);
                CertInfoInitEventEventResponse typedResponse = new CertInfoInitEventEventResponse();
                typedResponse.log = log;
                typedResponse.certID = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.stuID = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.stuName = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.usName = (String) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.studyTime = (String) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse.initTime = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<CertInfoInitEventEventResponse> certInfoInitEventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(CERTINFOINITEVENT_EVENT));
        return certInfoInitEventEventFlowable(filter);
    }

    public List<CertInfoUpdateEventEventResponse> getCertInfoUpdateEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(CERTINFOUPDATEEVENT_EVENT, transactionReceipt);
        ArrayList<CertInfoUpdateEventEventResponse> responses = new ArrayList<CertInfoUpdateEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            CertInfoUpdateEventEventResponse typedResponse = new CertInfoUpdateEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.certID = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.stuID = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.stuName = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.usName = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.studyTime = (String) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.certStatus = (String) eventValues.getNonIndexedValues().get(5).getValue();
            typedResponse.updateTime = (BigInteger) eventValues.getNonIndexedValues().get(6).getValue();
            typedResponse.certSignature = (String) eventValues.getNonIndexedValues().get(7).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<CertInfoUpdateEventEventResponse> certInfoUpdateEventEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, CertInfoUpdateEventEventResponse>() {
            @Override
            public CertInfoUpdateEventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(CERTINFOUPDATEEVENT_EVENT, log);
                CertInfoUpdateEventEventResponse typedResponse = new CertInfoUpdateEventEventResponse();
                typedResponse.log = log;
                typedResponse.certID = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.stuID = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.stuName = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.usName = (String) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.studyTime = (String) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse.certStatus = (String) eventValues.getNonIndexedValues().get(5).getValue();
                typedResponse.updateTime = (BigInteger) eventValues.getNonIndexedValues().get(6).getValue();
                typedResponse.certSignature = (String) eventValues.getNonIndexedValues().get(7).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<CertInfoUpdateEventEventResponse> certInfoUpdateEventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(CERTINFOUPDATEEVENT_EVENT));
        return certInfoUpdateEventEventFlowable(filter);
    }

    @Deprecated
    public static CreditCert load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new CreditCert(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static CreditCert load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new CreditCert(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static CreditCert load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new CreditCert(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static CreditCert load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new CreditCert(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<CreditCert> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(CreditCert.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<CreditCert> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(CreditCert.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<CreditCert> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(CreditCert.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<CreditCert> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(CreditCert.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class StuInfoInitEventEventResponse {
        public Log log;

        public BigInteger stuID;

        public String stuName;

        public String usName;

        public String major;

        public String extInfo;

        public BigInteger registerTime;
    }

    public static class StuInfoUpdateEventEventResponse {
        public Log log;

        public BigInteger stuID;

        public String stuName;

        public String usName;

        public String major;

        public String extInfo;

        public BigInteger updateTime;
    }

    public static class StuGradeRecordEventEventResponse {
        public Log log;

        public BigInteger stuID;

        public String stuName;

        public BigInteger grades;

        public BigInteger averageGrade;

        public String extInfo;

        public BigInteger recordTime;
    }

    public static class StuGradeUpdateEventEventResponse {
        public Log log;

        public BigInteger stuID;

        public String stuName;

        public BigInteger grades;

        public BigInteger averageGrade;

        public String extInfo;

        public BigInteger updateTime;
    }

    public static class ActivityRegisterEventEventResponse {
        public Log log;

        public BigInteger actID;

        public String actName;

        public String sponsor;

        public String status;

        public String extInfo;

        public BigInteger registerTime;
    }

    public static class ActivityInfoUpdateEventEventResponse {
        public Log log;

        public BigInteger actID;

        public String actName;

        public String sponsor;

        public String status;

        public String extInfo;

        public BigInteger updateTime;
    }

    public static class ActivityGradeRecodeEventEventResponse {
        public Log log;

        public BigInteger actID;

        public BigInteger stuID;

        public String actName;

        public String stuName;

        public String extInfo;

        public BigInteger recordTime;

        public String actSignature;
    }

    public static class CertInfoInitEventEventResponse {
        public Log log;

        public BigInteger certID;

        public BigInteger stuID;

        public String stuName;

        public String usName;

        public String studyTime;

        public BigInteger initTime;
    }

    public static class CertInfoUpdateEventEventResponse {
        public Log log;

        public BigInteger certID;

        public BigInteger stuID;

        public String stuName;

        public String usName;

        public String studyTime;

        public String certStatus;

        public BigInteger updateTime;

        public String certSignature;
    }
}
