hidden text host
host = "${ip}"

#node
hidden text node
node = "${node}" 

#chain id
hidden text chain
chain = "chain0"

#group id
hidden text group
group = "group0"


gauge p2p_session_actived by host , node
/\[P2PService\]\[Service\]\[METRIC\]heartBeat,connected count=(?P<count>\d+)/ {
  p2p_session_actived[host][node] = \$count
}

gauge block_exec_duration_milliseconds_gauge by chain , group , host , node
/\[CONSENSUS\]\[Core\]\[METRIC\]asyncExecuteBlock success.*?timeCost=(?P<timeCost>\d+)/ {
   block_exec_duration_milliseconds_gauge[chain][group][host][node] = \$timeCost
}

histogram block_exec_duration_milliseconds buckets 0, 50, 100, 150 by chain , group , host , node
/\[CONSENSUS\]\[Core\]\[METRIC\]asyncExecuteBlock success.*?timeCost=(?P<timeCost>\d+)/ {
   block_exec_duration_milliseconds[chain][group][host][node] = \$timeCost
}

gauge block_commit_duration_milliseconds_gauge by chain , group , host , node
/\[CONSENSUS\]\[PBFT\]\[STORAGE\]\[METRIC\]commitStableCheckPoint success.*?timeCost=(?P<timeCost>\d+)/ {
   block_commit_duration_milliseconds_gauge[chain][group][host][node] = \$timeCost
} 


histogram block_commit_duration_milliseconds buckets 0, 50, 100, 150 by chain , group , host , node
/\[CONSENSUS\]\[PBFT\]\[STORAGE\]\[METRIC\]commitStableCheckPoint success.*?timeCost=(?P<timeCost>\d+)/ {
   block_commit_duration_milliseconds[chain][group][host][node] = \$timeCost
}

gauge ledger_block_height by chain , group , host , node
/\[LEDGER\]\[METRIC\]asyncPrewriteBlock,number=(?P<number>\d+)/ {
  ledger_block_height[chain][group][host][node] = \$number
}

gauge txpool_pending_tx_size by chain , group , host , node
/\[TXPOOL\]\[METRIC\]batchFetchTxs success,.*?pendingTxs=(?P<pendingTxs>\d+)/ {
  txpool_pending_tx_size[chain][group][host][node] = \$pendingTxs
}
